终端机在文法中未使用

    AUTO
    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DO
    DOUBLE
    ENUM
    EXTERN
    FOR
    GOTO
    LONG
    REGISTER
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOLATILE
    ARROW
    ADDASS
    SUBASS
    MULASS
    DIVASS
    MODASS
    ANDASS
    ORASS
    XORASS
    NEWLINE


语法

    0 $accept: translation_unit $end

    1 translation_unit: external_declaration
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration

    5 function_definition: type_specifier declarator compound_statement

    6 declaration: type_specifier declarator_list ';'

    7 declarator_list: declarator
    8                | declarator_list ',' declarator

    9 declarator: direct_declarator

   10 direct_declarator: IDENTIFIER
   11                  | direct_declarator '(' parameter_type_list ')'
   12                  | direct_declarator '(' ')'
   13                  | direct_declarator '[' ']'
   14                  | direct_declarator '[' INTEGER ']'

   15 parameter_type_list: parameter_list

   16 parameter_list: type_specifier declarator
   17               | parameter_list ',' type_specifier declarator

   18 type_specifier: VOID
   19               | INT
   20               | FLOAT
   21               | CHAR

   22 compound_statement: '{' '}'
   23                   | '{' statement_list '}'

   24 statement_list: statement
   25               | statement_list statement

   26 statement: expression_statement
   27          | compound_statement
   28          | selection_statement
   29          | iteration_statement
   30          | jump_statement
   31          | declaration

   32 expression_statement: ';'
   33                     | expression ';'

   34 selection_statement: IF '(' expression ')' statement
   35                    | IF '(' expression ')' statement ELSE statement

   36 iteration_statement: WHILE '(' expression ')' statement

   37 jump_statement: RETURN ';'
   38               | RETURN expression ';'

   39 expression: assignment_expression

   40 assignment_expression: logical_or_expression
   41                      | unary_expression '=' assignment_expression

   42 logical_or_expression: logical_and_expression
   43                      | logical_or_expression OR logical_and_expression

   44 logical_and_expression: inclusive_or_expression
   45                       | logical_and_expression AND inclusive_or_expression

   46 inclusive_or_expression: exclusive_or_expression
   47                        | inclusive_or_expression '|' exclusive_or_expression

   48 exclusive_or_expression: and_expression
   49                        | exclusive_or_expression '^' and_expression

   50 and_expression: equality_expression
   51               | and_expression '&' equality_expression

   52 equality_expression: relational_expression
   53                    | equality_expression EQ relational_expression
   54                    | equality_expression NE relational_expression

   55 relational_expression: shift_expression
   56                      | relational_expression '<' shift_expression
   57                      | relational_expression '>' shift_expression
   58                      | relational_expression LE shift_expression
   59                      | relational_expression GE shift_expression

   60 shift_expression: additive_expression
   61                 | shift_expression SHL additive_expression
   62                 | shift_expression SHR additive_expression

   63 additive_expression: multiplicative_expression
   64                    | additive_expression '+' multiplicative_expression
   65                    | additive_expression '-' multiplicative_expression

   66 multiplicative_expression: unary_expression
   67                          | multiplicative_expression '*' unary_expression
   68                          | multiplicative_expression '/' unary_expression
   69                          | multiplicative_expression '%' unary_expression

   70 unary_expression: postfix_expression
   71                 | INC unary_expression
   72                 | DEC unary_expression
   73                 | unary_operator unary_expression

   74 unary_operator: '+'
   75               | '-'
   76               | '!'
   77               | '~'

   78 postfix_expression: primary_expression
   79                   | postfix_expression '[' expression ']'
   80                   | postfix_expression '(' ')'
   81                   | postfix_expression '(' argument_expression_list ')'
   82                   | postfix_expression INC
   83                   | postfix_expression DEC

   84 argument_expression_list: assignment_expression
   85                         | argument_expression_list ',' assignment_expression

   86 primary_expression: IDENTIFIER
   87                   | INTEGER
   88                   | FLOATING
   89                   | CHAR_CONST
   90                   | STRING_LITERAL
   91                   | '(' expression ')'


终结语词，附有它们出现处的规则

    $end (0) 0
    '!' (33) 76
    '%' (37) 69
    '&' (38) 51
    '(' (40) 11 12 34 35 36 80 81 91
    ')' (41) 11 12 34 35 36 80 81 91
    '*' (42) 67
    '+' (43) 64 74
    ',' (44) 8 17 85
    '-' (45) 65 75
    '/' (47) 68
    ';' (59) 6 32 33 37 38
    '<' (60) 56
    '=' (61) 41
    '>' (62) 57
    '[' (91) 13 14 79
    ']' (93) 13 14 79
    '^' (94) 49
    '{' (123) 22 23
    '|' (124) 47
    '}' (125) 22 23
    '~' (126) 77
    error (256)
    IFX (258)
    INTEGER <ival> (259) 14 87
    FLOATING <fval> (260) 88
    CHAR_CONST <sval> (261) 89
    STRING_LITERAL <sval> (262) 90
    IDENTIFIER <sval> (263) 10 86
    AUTO (264)
    BREAK (265)
    CASE (266)
    CHAR (267) 21
    CONST (268)
    CONTINUE (269)
    DEFAULT (270)
    DO (271)
    DOUBLE (272)
    ELSE (273) 35
    ENUM (274)
    EXTERN (275)
    FLOAT (276) 20
    FOR (277)
    GOTO (278)
    IF (279) 34 35
    INT (280) 19
    LONG (281)
    REGISTER (282)
    RETURN (283) 37 38
    SHORT (284)
    SIGNED (285)
    VOID (286) 18
    SIZEOF (287)
    STATIC (288)
    STRUCT (289)
    SWITCH (290)
    TYPEDEF (291)
    UNION (292)
    UNSIGNED (293)
    VOLATILE (294)
    WHILE (295) 36
    ARROW (296)
    INC (297) 71 82
    DEC (298) 72 83
    LE (299) 58
    GE (300) 59
    EQ (301) 53
    NE (302) 54
    AND (303) 45
    OR (304) 43
    ADDASS (305)
    SUBASS (306)
    MULASS (307)
    DIVASS (308)
    MODASS (309)
    ANDASS (310)
    ORASS (311)
    XORASS (312)
    SHL (313) 61
    SHR (314) 62
    NEWLINE (315)


非终结语词，附有它们出现处的规则

    $accept (82)
        on left: 0
    translation_unit (83)
        on left: 1 2
        on right: 0 2
    external_declaration (84)
        on left: 3 4
        on right: 1 2
    function_definition (85)
        on left: 5
        on right: 3
    declaration (86)
        on left: 6
        on right: 4 31
    declarator_list (87)
        on left: 7 8
        on right: 6 8
    declarator <sval> (88)
        on left: 9
        on right: 5 7 8 16 17
    direct_declarator <sval> (89)
        on left: 10 11 12 13 14
        on right: 9 11 12 13 14
    parameter_type_list (90)
        on left: 15
        on right: 11
    parameter_list (91)
        on left: 16 17
        on right: 15 17
    type_specifier <ival> (92)
        on left: 18 19 20 21
        on right: 5 6 16 17
    compound_statement (93)
        on left: 22 23
        on right: 5 27
    statement_list (94)
        on left: 24 25
        on right: 23 25
    statement (95)
        on left: 26 27 28 29 30 31
        on right: 24 25 34 35 36
    expression_statement (96)
        on left: 32 33
        on right: 26
    selection_statement (97)
        on left: 34 35
        on right: 28
    iteration_statement (98)
        on left: 36
        on right: 29
    jump_statement (99)
        on left: 37 38
        on right: 30
    expression (100)
        on left: 39
        on right: 33 34 35 36 38 79 91
    assignment_expression (101)
        on left: 40 41
        on right: 39 41 84 85
    logical_or_expression (102)
        on left: 42 43
        on right: 40 43
    logical_and_expression (103)
        on left: 44 45
        on right: 42 43 45
    inclusive_or_expression (104)
        on left: 46 47
        on right: 44 45 47
    exclusive_or_expression (105)
        on left: 48 49
        on right: 46 47 49
    and_expression (106)
        on left: 50 51
        on right: 48 49 51
    equality_expression (107)
        on left: 52 53 54
        on right: 50 51 53 54
    relational_expression (108)
        on left: 55 56 57 58 59
        on right: 52 53 54 56 57 58 59
    shift_expression (109)
        on left: 60 61 62
        on right: 55 56 57 58 59 61 62
    additive_expression (110)
        on left: 63 64 65
        on right: 60 61 62 64 65
    multiplicative_expression (111)
        on left: 66 67 68 69
        on right: 63 64 65 67 68 69
    unary_expression (112)
        on left: 70 71 72 73
        on right: 41 66 67 68 69 71 72 73
    unary_operator (113)
        on left: 74 75 76 77
        on right: 73
    postfix_expression (114)
        on left: 78 79 80 81 82 83
        on right: 70 79 80 81 82 83
    argument_expression_list (115)
        on left: 84 85
        on right: 81 85
    primary_expression (116)
        on left: 86 87 88 89 90 91
        on right: 78


状态 0

    0 $accept: • translation_unit $end

    CHAR   偏移，并进入状态 1
    FLOAT  偏移，并进入状态 2
    INT    偏移，并进入状态 3
    VOID   偏移，并进入状态 4

    translation_unit      转到状态 5
    external_declaration  转到状态 6
    function_definition   转到状态 7
    declaration           转到状态 8
    type_specifier        转到状态 9


状态 1

   21 type_specifier: CHAR •

    $default  使用规则 21 以归约 (type_specifier)


状态 2

   20 type_specifier: FLOAT •

    $default  使用规则 20 以归约 (type_specifier)


状态 3

   19 type_specifier: INT •

    $default  使用规则 19 以归约 (type_specifier)


状态 4

   18 type_specifier: VOID •

    $default  使用规则 18 以归约 (type_specifier)


状态 5

    0 $accept: translation_unit • $end
    2 translation_unit: translation_unit • external_declaration

    $end   偏移，并进入状态 10
    CHAR   偏移，并进入状态 1
    FLOAT  偏移，并进入状态 2
    INT    偏移，并进入状态 3
    VOID   偏移，并进入状态 4

    external_declaration  转到状态 11
    function_definition   转到状态 7
    declaration           转到状态 8
    type_specifier        转到状态 9


状态 6

    1 translation_unit: external_declaration •

    $default  使用规则 1 以归约 (translation_unit)


状态 7

    3 external_declaration: function_definition •

    $default  使用规则 3 以归约 (external_declaration)


状态 8

    4 external_declaration: declaration •

    $default  使用规则 4 以归约 (external_declaration)


状态 9

    5 function_definition: type_specifier • declarator compound_statement
    6 declaration: type_specifier • declarator_list ';'

    IDENTIFIER  偏移，并进入状态 12

    declarator_list    转到状态 13
    declarator         转到状态 14
    direct_declarator  转到状态 15


状态 10

    0 $accept: translation_unit $end •

    $default  接受


状态 11

    2 translation_unit: translation_unit external_declaration •

    $default  使用规则 2 以归约 (translation_unit)


状态 12

   10 direct_declarator: IDENTIFIER •

    $default  使用规则 10 以归约 (direct_declarator)


状态 13

    6 declaration: type_specifier declarator_list • ';'
    8 declarator_list: declarator_list • ',' declarator

    ';'  偏移，并进入状态 16
    ','  偏移，并进入状态 17


状态 14

    5 function_definition: type_specifier declarator • compound_statement
    7 declarator_list: declarator •

    '{'  偏移，并进入状态 18

    $default  使用规则 7 以归约 (declarator_list)

    compound_statement  转到状态 19


状态 15

    9 declarator: direct_declarator •
   11 direct_declarator: direct_declarator • '(' parameter_type_list ')'
   12                  | direct_declarator • '(' ')'
   13                  | direct_declarator • '[' ']'
   14                  | direct_declarator • '[' INTEGER ']'

    '('  偏移，并进入状态 20
    '['  偏移，并进入状态 21

    $default  使用规则 9 以归约 (declarator)


状态 16

    6 declaration: type_specifier declarator_list ';' •

    $default  使用规则 6 以归约 (declaration)


状态 17

    8 declarator_list: declarator_list ',' • declarator

    IDENTIFIER  偏移，并进入状态 12

    declarator         转到状态 22
    direct_declarator  转到状态 15


状态 18

   22 compound_statement: '{' • '}'
   23                   | '{' • statement_list '}'

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    CHAR            偏移，并进入状态 1
    FLOAT           偏移，并进入状态 2
    IF              偏移，并进入状态 28
    INT             偏移，并进入状态 3
    RETURN          偏移，并进入状态 29
    VOID            偏移，并进入状态 4
    WHILE           偏移，并进入状态 30
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    ';'             偏移，并进入状态 33
    '('             偏移，并进入状态 34
    '{'             偏移，并进入状态 18
    '}'             偏移，并进入状态 35
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    declaration                转到状态 40
    type_specifier             转到状态 41
    compound_statement         转到状态 42
    statement_list             转到状态 43
    statement                  转到状态 44
    expression_statement       转到状态 45
    selection_statement        转到状态 46
    iteration_statement        转到状态 47
    jump_statement             转到状态 48
    expression                 转到状态 49
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 19

    5 function_definition: type_specifier declarator compound_statement •

    $default  使用规则 5 以归约 (function_definition)


状态 20

   11 direct_declarator: direct_declarator '(' • parameter_type_list ')'
   12                  | direct_declarator '(' • ')'

    CHAR   偏移，并进入状态 1
    FLOAT  偏移，并进入状态 2
    INT    偏移，并进入状态 3
    VOID   偏移，并进入状态 4
    ')'    偏移，并进入状态 65

    parameter_type_list  转到状态 66
    parameter_list       转到状态 67
    type_specifier       转到状态 68


状态 21

   13 direct_declarator: direct_declarator '[' • ']'
   14                  | direct_declarator '[' • INTEGER ']'

    INTEGER  偏移，并进入状态 69
    ']'      偏移，并进入状态 70


状态 22

    8 declarator_list: declarator_list ',' declarator •

    $default  使用规则 8 以归约 (declarator_list)


状态 23

   87 primary_expression: INTEGER •

    $default  使用规则 87 以归约 (primary_expression)


状态 24

   88 primary_expression: FLOATING •

    $default  使用规则 88 以归约 (primary_expression)


状态 25

   89 primary_expression: CHAR_CONST •

    $default  使用规则 89 以归约 (primary_expression)


状态 26

   90 primary_expression: STRING_LITERAL •

    $default  使用规则 90 以归约 (primary_expression)


状态 27

   86 primary_expression: IDENTIFIER •

    $default  使用规则 86 以归约 (primary_expression)


状态 28

   34 selection_statement: IF • '(' expression ')' statement
   35                    | IF • '(' expression ')' statement ELSE statement

    '('  偏移，并进入状态 71


状态 29

   37 jump_statement: RETURN • ';'
   38               | RETURN • expression ';'

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    ';'             偏移，并进入状态 72
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    expression                 转到状态 73
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 30

   36 iteration_statement: WHILE • '(' expression ')' statement

    '('  偏移，并进入状态 74


状态 31

   71 unary_expression: INC • unary_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    unary_expression    转到状态 75
    unary_operator      转到状态 62
    postfix_expression  转到状态 63
    primary_expression  转到状态 64


状态 32

   72 unary_expression: DEC • unary_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    unary_expression    转到状态 76
    unary_operator      转到状态 62
    postfix_expression  转到状态 63
    primary_expression  转到状态 64


状态 33

   32 expression_statement: ';' •

    $default  使用规则 32 以归约 (expression_statement)


状态 34

   91 primary_expression: '(' • expression ')'

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    expression                 转到状态 77
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 35

   22 compound_statement: '{' '}' •

    $default  使用规则 22 以归约 (compound_statement)


状态 36

   74 unary_operator: '+' •

    $default  使用规则 74 以归约 (unary_operator)


状态 37

   75 unary_operator: '-' •

    $default  使用规则 75 以归约 (unary_operator)


状态 38

   76 unary_operator: '!' •

    $default  使用规则 76 以归约 (unary_operator)


状态 39

   77 unary_operator: '~' •

    $default  使用规则 77 以归约 (unary_operator)


状态 40

   31 statement: declaration •

    $default  使用规则 31 以归约 (statement)


状态 41

    6 declaration: type_specifier • declarator_list ';'

    IDENTIFIER  偏移，并进入状态 12

    declarator_list    转到状态 13
    declarator         转到状态 78
    direct_declarator  转到状态 15


状态 42

   27 statement: compound_statement •

    $default  使用规则 27 以归约 (statement)


状态 43

   23 compound_statement: '{' statement_list • '}'
   25 statement_list: statement_list • statement

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    CHAR            偏移，并进入状态 1
    FLOAT           偏移，并进入状态 2
    IF              偏移，并进入状态 28
    INT             偏移，并进入状态 3
    RETURN          偏移，并进入状态 29
    VOID            偏移，并进入状态 4
    WHILE           偏移，并进入状态 30
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    ';'             偏移，并进入状态 33
    '('             偏移，并进入状态 34
    '{'             偏移，并进入状态 18
    '}'             偏移，并进入状态 79
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    declaration                转到状态 40
    type_specifier             转到状态 41
    compound_statement         转到状态 42
    statement                  转到状态 80
    expression_statement       转到状态 45
    selection_statement        转到状态 46
    iteration_statement        转到状态 47
    jump_statement             转到状态 48
    expression                 转到状态 49
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 44

   24 statement_list: statement •

    $default  使用规则 24 以归约 (statement_list)


状态 45

   26 statement: expression_statement •

    $default  使用规则 26 以归约 (statement)


状态 46

   28 statement: selection_statement •

    $default  使用规则 28 以归约 (statement)


状态 47

   29 statement: iteration_statement •

    $default  使用规则 29 以归约 (statement)


状态 48

   30 statement: jump_statement •

    $default  使用规则 30 以归约 (statement)


状态 49

   33 expression_statement: expression • ';'

    ';'  偏移，并进入状态 81


状态 50

   39 expression: assignment_expression •

    $default  使用规则 39 以归约 (expression)


状态 51

   40 assignment_expression: logical_or_expression •
   43 logical_or_expression: logical_or_expression • OR logical_and_expression

    OR  偏移，并进入状态 82

    $default  使用规则 40 以归约 (assignment_expression)


状态 52

   42 logical_or_expression: logical_and_expression •
   45 logical_and_expression: logical_and_expression • AND inclusive_or_expression

    AND  偏移，并进入状态 83

    $default  使用规则 42 以归约 (logical_or_expression)


状态 53

   44 logical_and_expression: inclusive_or_expression •
   47 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression

    '|'  偏移，并进入状态 84

    $default  使用规则 44 以归约 (logical_and_expression)


状态 54

   46 inclusive_or_expression: exclusive_or_expression •
   49 exclusive_or_expression: exclusive_or_expression • '^' and_expression

    '^'  偏移，并进入状态 85

    $default  使用规则 46 以归约 (inclusive_or_expression)


状态 55

   48 exclusive_or_expression: and_expression •
   51 and_expression: and_expression • '&' equality_expression

    '&'  偏移，并进入状态 86

    $default  使用规则 48 以归约 (exclusive_or_expression)


状态 56

   50 and_expression: equality_expression •
   53 equality_expression: equality_expression • EQ relational_expression
   54                    | equality_expression • NE relational_expression

    EQ  偏移，并进入状态 87
    NE  偏移，并进入状态 88

    $default  使用规则 50 以归约 (and_expression)


状态 57

   52 equality_expression: relational_expression •
   56 relational_expression: relational_expression • '<' shift_expression
   57                      | relational_expression • '>' shift_expression
   58                      | relational_expression • LE shift_expression
   59                      | relational_expression • GE shift_expression

    LE   偏移，并进入状态 89
    GE   偏移，并进入状态 90
    '<'  偏移，并进入状态 91
    '>'  偏移，并进入状态 92

    $default  使用规则 52 以归约 (equality_expression)


状态 58

   55 relational_expression: shift_expression •
   61 shift_expression: shift_expression • SHL additive_expression
   62                 | shift_expression • SHR additive_expression

    SHL  偏移，并进入状态 93
    SHR  偏移，并进入状态 94

    $default  使用规则 55 以归约 (relational_expression)


状态 59

   60 shift_expression: additive_expression •
   64 additive_expression: additive_expression • '+' multiplicative_expression
   65                    | additive_expression • '-' multiplicative_expression

    '+'  偏移，并进入状态 95
    '-'  偏移，并进入状态 96

    $default  使用规则 60 以归约 (shift_expression)


状态 60

   63 additive_expression: multiplicative_expression •
   67 multiplicative_expression: multiplicative_expression • '*' unary_expression
   68                          | multiplicative_expression • '/' unary_expression
   69                          | multiplicative_expression • '%' unary_expression

    '*'  偏移，并进入状态 97
    '/'  偏移，并进入状态 98
    '%'  偏移，并进入状态 99

    $default  使用规则 63 以归约 (additive_expression)


状态 61

   41 assignment_expression: unary_expression • '=' assignment_expression
   66 multiplicative_expression: unary_expression •

    '='  偏移，并进入状态 100

    $default  使用规则 66 以归约 (multiplicative_expression)


状态 62

   73 unary_expression: unary_operator • unary_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    unary_expression    转到状态 101
    unary_operator      转到状态 62
    postfix_expression  转到状态 63
    primary_expression  转到状态 64


状态 63

   70 unary_expression: postfix_expression •
   79 postfix_expression: postfix_expression • '[' expression ']'
   80                   | postfix_expression • '(' ')'
   81                   | postfix_expression • '(' argument_expression_list ')'
   82                   | postfix_expression • INC
   83                   | postfix_expression • DEC

    INC  偏移，并进入状态 102
    DEC  偏移，并进入状态 103
    '('  偏移，并进入状态 104
    '['  偏移，并进入状态 105

    $default  使用规则 70 以归约 (unary_expression)


状态 64

   78 postfix_expression: primary_expression •

    $default  使用规则 78 以归约 (postfix_expression)


状态 65

   12 direct_declarator: direct_declarator '(' ')' •

    $default  使用规则 12 以归约 (direct_declarator)


状态 66

   11 direct_declarator: direct_declarator '(' parameter_type_list • ')'

    ')'  偏移，并进入状态 106


状态 67

   15 parameter_type_list: parameter_list •
   17 parameter_list: parameter_list • ',' type_specifier declarator

    ','  偏移，并进入状态 107

    $default  使用规则 15 以归约 (parameter_type_list)


状态 68

   16 parameter_list: type_specifier • declarator

    IDENTIFIER  偏移，并进入状态 12

    declarator         转到状态 108
    direct_declarator  转到状态 15


状态 69

   14 direct_declarator: direct_declarator '[' INTEGER • ']'

    ']'  偏移，并进入状态 109


状态 70

   13 direct_declarator: direct_declarator '[' ']' •

    $default  使用规则 13 以归约 (direct_declarator)


状态 71

   34 selection_statement: IF '(' • expression ')' statement
   35                    | IF '(' • expression ')' statement ELSE statement

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    expression                 转到状态 110
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 72

   37 jump_statement: RETURN ';' •

    $default  使用规则 37 以归约 (jump_statement)


状态 73

   38 jump_statement: RETURN expression • ';'

    ';'  偏移，并进入状态 111


状态 74

   36 iteration_statement: WHILE '(' • expression ')' statement

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    expression                 转到状态 112
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 75

   71 unary_expression: INC unary_expression •

    $default  使用规则 71 以归约 (unary_expression)


状态 76

   72 unary_expression: DEC unary_expression •

    $default  使用规则 72 以归约 (unary_expression)


状态 77

   91 primary_expression: '(' expression • ')'

    ')'  偏移，并进入状态 113


状态 78

    7 declarator_list: declarator •

    $default  使用规则 7 以归约 (declarator_list)


状态 79

   23 compound_statement: '{' statement_list '}' •

    $default  使用规则 23 以归约 (compound_statement)


状态 80

   25 statement_list: statement_list statement •

    $default  使用规则 25 以归约 (statement_list)


状态 81

   33 expression_statement: expression ';' •

    $default  使用规则 33 以归约 (expression_statement)


状态 82

   43 logical_or_expression: logical_or_expression OR • logical_and_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    logical_and_expression     转到状态 114
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 83

   45 logical_and_expression: logical_and_expression AND • inclusive_or_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    inclusive_or_expression    转到状态 116
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 84

   47 inclusive_or_expression: inclusive_or_expression '|' • exclusive_or_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    exclusive_or_expression    转到状态 117
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 85

   49 exclusive_or_expression: exclusive_or_expression '^' • and_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    and_expression             转到状态 118
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 86

   51 and_expression: and_expression '&' • equality_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    equality_expression        转到状态 119
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 87

   53 equality_expression: equality_expression EQ • relational_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    relational_expression      转到状态 120
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 88

   54 equality_expression: equality_expression NE • relational_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    relational_expression      转到状态 121
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 89

   58 relational_expression: relational_expression LE • shift_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    shift_expression           转到状态 122
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 90

   59 relational_expression: relational_expression GE • shift_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    shift_expression           转到状态 123
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 91

   56 relational_expression: relational_expression '<' • shift_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    shift_expression           转到状态 124
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 92

   57 relational_expression: relational_expression '>' • shift_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    shift_expression           转到状态 125
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 93

   61 shift_expression: shift_expression SHL • additive_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    additive_expression        转到状态 126
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 94

   62 shift_expression: shift_expression SHR • additive_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    additive_expression        转到状态 127
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 95

   64 additive_expression: additive_expression '+' • multiplicative_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    multiplicative_expression  转到状态 128
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 96

   65 additive_expression: additive_expression '-' • multiplicative_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    multiplicative_expression  转到状态 129
    unary_expression           转到状态 115
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 97

   67 multiplicative_expression: multiplicative_expression '*' • unary_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    unary_expression    转到状态 130
    unary_operator      转到状态 62
    postfix_expression  转到状态 63
    primary_expression  转到状态 64


状态 98

   68 multiplicative_expression: multiplicative_expression '/' • unary_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    unary_expression    转到状态 131
    unary_operator      转到状态 62
    postfix_expression  转到状态 63
    primary_expression  转到状态 64


状态 99

   69 multiplicative_expression: multiplicative_expression '%' • unary_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    unary_expression    转到状态 132
    unary_operator      转到状态 62
    postfix_expression  转到状态 63
    primary_expression  转到状态 64


状态 100

   41 assignment_expression: unary_expression '=' • assignment_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    assignment_expression      转到状态 133
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 101

   73 unary_expression: unary_operator unary_expression •

    $default  使用规则 73 以归约 (unary_expression)


状态 102

   82 postfix_expression: postfix_expression INC •

    $default  使用规则 82 以归约 (postfix_expression)


状态 103

   83 postfix_expression: postfix_expression DEC •

    $default  使用规则 83 以归约 (postfix_expression)


状态 104

   80 postfix_expression: postfix_expression '(' • ')'
   81                   | postfix_expression '(' • argument_expression_list ')'

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    ')'             偏移，并进入状态 134
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    assignment_expression      转到状态 135
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    argument_expression_list   转到状态 136
    primary_expression         转到状态 64


状态 105

   79 postfix_expression: postfix_expression '[' • expression ']'

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    expression                 转到状态 137
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 106

   11 direct_declarator: direct_declarator '(' parameter_type_list ')' •

    $default  使用规则 11 以归约 (direct_declarator)


状态 107

   17 parameter_list: parameter_list ',' • type_specifier declarator

    CHAR   偏移，并进入状态 1
    FLOAT  偏移，并进入状态 2
    INT    偏移，并进入状态 3
    VOID   偏移，并进入状态 4

    type_specifier  转到状态 138


状态 108

   16 parameter_list: type_specifier declarator •

    $default  使用规则 16 以归约 (parameter_list)


状态 109

   14 direct_declarator: direct_declarator '[' INTEGER ']' •

    $default  使用规则 14 以归约 (direct_declarator)


状态 110

   34 selection_statement: IF '(' expression • ')' statement
   35                    | IF '(' expression • ')' statement ELSE statement

    ')'  偏移，并进入状态 139


状态 111

   38 jump_statement: RETURN expression ';' •

    $default  使用规则 38 以归约 (jump_statement)


状态 112

   36 iteration_statement: WHILE '(' expression • ')' statement

    ')'  偏移，并进入状态 140


状态 113

   91 primary_expression: '(' expression ')' •

    $default  使用规则 91 以归约 (primary_expression)


状态 114

   43 logical_or_expression: logical_or_expression OR logical_and_expression •
   45 logical_and_expression: logical_and_expression • AND inclusive_or_expression

    AND  偏移，并进入状态 83

    $default  使用规则 43 以归约 (logical_or_expression)


状态 115

   66 multiplicative_expression: unary_expression •

    $default  使用规则 66 以归约 (multiplicative_expression)


状态 116

   45 logical_and_expression: logical_and_expression AND inclusive_or_expression •
   47 inclusive_or_expression: inclusive_or_expression • '|' exclusive_or_expression

    '|'  偏移，并进入状态 84

    $default  使用规则 45 以归约 (logical_and_expression)


状态 117

   47 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression •
   49 exclusive_or_expression: exclusive_or_expression • '^' and_expression

    '^'  偏移，并进入状态 85

    $default  使用规则 47 以归约 (inclusive_or_expression)


状态 118

   49 exclusive_or_expression: exclusive_or_expression '^' and_expression •
   51 and_expression: and_expression • '&' equality_expression

    '&'  偏移，并进入状态 86

    $default  使用规则 49 以归约 (exclusive_or_expression)


状态 119

   51 and_expression: and_expression '&' equality_expression •
   53 equality_expression: equality_expression • EQ relational_expression
   54                    | equality_expression • NE relational_expression

    EQ  偏移，并进入状态 87
    NE  偏移，并进入状态 88

    $default  使用规则 51 以归约 (and_expression)


状态 120

   53 equality_expression: equality_expression EQ relational_expression •
   56 relational_expression: relational_expression • '<' shift_expression
   57                      | relational_expression • '>' shift_expression
   58                      | relational_expression • LE shift_expression
   59                      | relational_expression • GE shift_expression

    LE   偏移，并进入状态 89
    GE   偏移，并进入状态 90
    '<'  偏移，并进入状态 91
    '>'  偏移，并进入状态 92

    $default  使用规则 53 以归约 (equality_expression)


状态 121

   54 equality_expression: equality_expression NE relational_expression •
   56 relational_expression: relational_expression • '<' shift_expression
   57                      | relational_expression • '>' shift_expression
   58                      | relational_expression • LE shift_expression
   59                      | relational_expression • GE shift_expression

    LE   偏移，并进入状态 89
    GE   偏移，并进入状态 90
    '<'  偏移，并进入状态 91
    '>'  偏移，并进入状态 92

    $default  使用规则 54 以归约 (equality_expression)


状态 122

   58 relational_expression: relational_expression LE shift_expression •
   61 shift_expression: shift_expression • SHL additive_expression
   62                 | shift_expression • SHR additive_expression

    SHL  偏移，并进入状态 93
    SHR  偏移，并进入状态 94

    $default  使用规则 58 以归约 (relational_expression)


状态 123

   59 relational_expression: relational_expression GE shift_expression •
   61 shift_expression: shift_expression • SHL additive_expression
   62                 | shift_expression • SHR additive_expression

    SHL  偏移，并进入状态 93
    SHR  偏移，并进入状态 94

    $default  使用规则 59 以归约 (relational_expression)


状态 124

   56 relational_expression: relational_expression '<' shift_expression •
   61 shift_expression: shift_expression • SHL additive_expression
   62                 | shift_expression • SHR additive_expression

    SHL  偏移，并进入状态 93
    SHR  偏移，并进入状态 94

    $default  使用规则 56 以归约 (relational_expression)


状态 125

   57 relational_expression: relational_expression '>' shift_expression •
   61 shift_expression: shift_expression • SHL additive_expression
   62                 | shift_expression • SHR additive_expression

    SHL  偏移，并进入状态 93
    SHR  偏移，并进入状态 94

    $default  使用规则 57 以归约 (relational_expression)


状态 126

   61 shift_expression: shift_expression SHL additive_expression •
   64 additive_expression: additive_expression • '+' multiplicative_expression
   65                    | additive_expression • '-' multiplicative_expression

    '+'  偏移，并进入状态 95
    '-'  偏移，并进入状态 96

    $default  使用规则 61 以归约 (shift_expression)


状态 127

   62 shift_expression: shift_expression SHR additive_expression •
   64 additive_expression: additive_expression • '+' multiplicative_expression
   65                    | additive_expression • '-' multiplicative_expression

    '+'  偏移，并进入状态 95
    '-'  偏移，并进入状态 96

    $default  使用规则 62 以归约 (shift_expression)


状态 128

   64 additive_expression: additive_expression '+' multiplicative_expression •
   67 multiplicative_expression: multiplicative_expression • '*' unary_expression
   68                          | multiplicative_expression • '/' unary_expression
   69                          | multiplicative_expression • '%' unary_expression

    '*'  偏移，并进入状态 97
    '/'  偏移，并进入状态 98
    '%'  偏移，并进入状态 99

    $default  使用规则 64 以归约 (additive_expression)


状态 129

   65 additive_expression: additive_expression '-' multiplicative_expression •
   67 multiplicative_expression: multiplicative_expression • '*' unary_expression
   68                          | multiplicative_expression • '/' unary_expression
   69                          | multiplicative_expression • '%' unary_expression

    '*'  偏移，并进入状态 97
    '/'  偏移，并进入状态 98
    '%'  偏移，并进入状态 99

    $default  使用规则 65 以归约 (additive_expression)


状态 130

   67 multiplicative_expression: multiplicative_expression '*' unary_expression •

    $default  使用规则 67 以归约 (multiplicative_expression)


状态 131

   68 multiplicative_expression: multiplicative_expression '/' unary_expression •

    $default  使用规则 68 以归约 (multiplicative_expression)


状态 132

   69 multiplicative_expression: multiplicative_expression '%' unary_expression •

    $default  使用规则 69 以归约 (multiplicative_expression)


状态 133

   41 assignment_expression: unary_expression '=' assignment_expression •

    $default  使用规则 41 以归约 (assignment_expression)


状态 134

   80 postfix_expression: postfix_expression '(' ')' •

    $default  使用规则 80 以归约 (postfix_expression)


状态 135

   84 argument_expression_list: assignment_expression •

    $default  使用规则 84 以归约 (argument_expression_list)


状态 136

   81 postfix_expression: postfix_expression '(' argument_expression_list • ')'
   85 argument_expression_list: argument_expression_list • ',' assignment_expression

    ','  偏移，并进入状态 141
    ')'  偏移，并进入状态 142


状态 137

   79 postfix_expression: postfix_expression '[' expression • ']'

    ']'  偏移，并进入状态 143


状态 138

   17 parameter_list: parameter_list ',' type_specifier • declarator

    IDENTIFIER  偏移，并进入状态 12

    declarator         转到状态 144
    direct_declarator  转到状态 15


状态 139

   34 selection_statement: IF '(' expression ')' • statement
   35                    | IF '(' expression ')' • statement ELSE statement

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    CHAR            偏移，并进入状态 1
    FLOAT           偏移，并进入状态 2
    IF              偏移，并进入状态 28
    INT             偏移，并进入状态 3
    RETURN          偏移，并进入状态 29
    VOID            偏移，并进入状态 4
    WHILE           偏移，并进入状态 30
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    ';'             偏移，并进入状态 33
    '('             偏移，并进入状态 34
    '{'             偏移，并进入状态 18
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    declaration                转到状态 40
    type_specifier             转到状态 41
    compound_statement         转到状态 42
    statement                  转到状态 145
    expression_statement       转到状态 45
    selection_statement        转到状态 46
    iteration_statement        转到状态 47
    jump_statement             转到状态 48
    expression                 转到状态 49
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 140

   36 iteration_statement: WHILE '(' expression ')' • statement

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    CHAR            偏移，并进入状态 1
    FLOAT           偏移，并进入状态 2
    IF              偏移，并进入状态 28
    INT             偏移，并进入状态 3
    RETURN          偏移，并进入状态 29
    VOID            偏移，并进入状态 4
    WHILE           偏移，并进入状态 30
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    ';'             偏移，并进入状态 33
    '('             偏移，并进入状态 34
    '{'             偏移，并进入状态 18
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    declaration                转到状态 40
    type_specifier             转到状态 41
    compound_statement         转到状态 42
    statement                  转到状态 146
    expression_statement       转到状态 45
    selection_statement        转到状态 46
    iteration_statement        转到状态 47
    jump_statement             转到状态 48
    expression                 转到状态 49
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 141

   85 argument_expression_list: argument_expression_list ',' • assignment_expression

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    '('             偏移，并进入状态 34
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    assignment_expression      转到状态 147
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 142

   81 postfix_expression: postfix_expression '(' argument_expression_list ')' •

    $default  使用规则 81 以归约 (postfix_expression)


状态 143

   79 postfix_expression: postfix_expression '[' expression ']' •

    $default  使用规则 79 以归约 (postfix_expression)


状态 144

   17 parameter_list: parameter_list ',' type_specifier declarator •

    $default  使用规则 17 以归约 (parameter_list)


状态 145

   34 selection_statement: IF '(' expression ')' statement •
   35                    | IF '(' expression ')' statement • ELSE statement

    ELSE  偏移，并进入状态 148

    $default  使用规则 34 以归约 (selection_statement)


状态 146

   36 iteration_statement: WHILE '(' expression ')' statement •

    $default  使用规则 36 以归约 (iteration_statement)


状态 147

   85 argument_expression_list: argument_expression_list ',' assignment_expression •

    $default  使用规则 85 以归约 (argument_expression_list)


状态 148

   35 selection_statement: IF '(' expression ')' statement ELSE • statement

    INTEGER         偏移，并进入状态 23
    FLOATING        偏移，并进入状态 24
    CHAR_CONST      偏移，并进入状态 25
    STRING_LITERAL  偏移，并进入状态 26
    IDENTIFIER      偏移，并进入状态 27
    CHAR            偏移，并进入状态 1
    FLOAT           偏移，并进入状态 2
    IF              偏移，并进入状态 28
    INT             偏移，并进入状态 3
    RETURN          偏移，并进入状态 29
    VOID            偏移，并进入状态 4
    WHILE           偏移，并进入状态 30
    INC             偏移，并进入状态 31
    DEC             偏移，并进入状态 32
    ';'             偏移，并进入状态 33
    '('             偏移，并进入状态 34
    '{'             偏移，并进入状态 18
    '+'             偏移，并进入状态 36
    '-'             偏移，并进入状态 37
    '!'             偏移，并进入状态 38
    '~'             偏移，并进入状态 39

    declaration                转到状态 40
    type_specifier             转到状态 41
    compound_statement         转到状态 42
    statement                  转到状态 149
    expression_statement       转到状态 45
    selection_statement        转到状态 46
    iteration_statement        转到状态 47
    jump_statement             转到状态 48
    expression                 转到状态 49
    assignment_expression      转到状态 50
    logical_or_expression      转到状态 51
    logical_and_expression     转到状态 52
    inclusive_or_expression    转到状态 53
    exclusive_or_expression    转到状态 54
    and_expression             转到状态 55
    equality_expression        转到状态 56
    relational_expression      转到状态 57
    shift_expression           转到状态 58
    additive_expression        转到状态 59
    multiplicative_expression  转到状态 60
    unary_expression           转到状态 61
    unary_operator             转到状态 62
    postfix_expression         转到状态 63
    primary_expression         转到状态 64


状态 149

   35 selection_statement: IF '(' expression ')' statement ELSE statement •

    $default  使用规则 35 以归约 (selection_statement)
